/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { Subject } from 'rxjs';
import { NavigationItem } from './navigation-item.interface';
import { NavigationModel } from './navigation-model';
import { NavigationState } from './navigation-state.interface';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class NavigationService {
    private localization;
    readonly expands: Subject<NavigationState>;
    readonly moves: Subject<NavigationState>;
    readonly checks: Subject<string>;
    readonly selects: Subject<string>;
    navigable: boolean;
    model: NavigationModel;
    actions: {
        [x: string]: Function;
    };
    private activeItem;
    private isFocused;
    private _model;
    private readonly activeIndex;
    private readonly focusableItem;
    private readonly isActiveExpanded;
    constructor(localization: LocalizationService);
    activate(item: NavigationItem): void;
    activateParent(index: string): void;
    activateIndex(index: string): void;
    activateClosest(index: string): void;
    activateFocusable(): void;
    deactivate(): void;
    checkIndex(index: string): void;
    selectIndex(index: string): void;
    isActive(index: string): boolean;
    isFocusable(index: string): boolean;
    isDisabled(index: string): boolean;
    registerItem(id: number, index: string, disabled: boolean): void;
    unregisterItem(id: number, index: string): void;
    move(e: any): void;
    private expand;
    private moveToParent;
    private moveToChild;
    private notifyExpand;
    private notifyMove;
    private navigationState;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NavigationService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NavigationService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbi5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbIm5hdmlnYXRpb24uc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IExvY2FsaXphdGlvblNlcnZpY2UgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1sMTBuJztcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IE5hdmlnYXRpb25JdGVtIH0gZnJvbSAnLi9uYXZpZ2F0aW9uLWl0ZW0uaW50ZXJmYWNlJztcbmltcG9ydCB7IE5hdmlnYXRpb25Nb2RlbCB9IGZyb20gJy4vbmF2aWdhdGlvbi1tb2RlbCc7XG5pbXBvcnQgeyBOYXZpZ2F0aW9uU3RhdGUgfSBmcm9tICcuL25hdmlnYXRpb24tc3RhdGUuaW50ZXJmYWNlJztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYXZpZ2F0aW9uU2VydmljZSB7XG4gICAgcHJpdmF0ZSBsb2NhbGl6YXRpb247XG4gICAgcmVhZG9ubHkgZXhwYW5kczogU3ViamVjdDxOYXZpZ2F0aW9uU3RhdGU+O1xuICAgIHJlYWRvbmx5IG1vdmVzOiBTdWJqZWN0PE5hdmlnYXRpb25TdGF0ZT47XG4gICAgcmVhZG9ubHkgY2hlY2tzOiBTdWJqZWN0PHN0cmluZz47XG4gICAgcmVhZG9ubHkgc2VsZWN0czogU3ViamVjdDxzdHJpbmc+O1xuICAgIG5hdmlnYWJsZTogYm9vbGVhbjtcbiAgICBtb2RlbDogTmF2aWdhdGlvbk1vZGVsO1xuICAgIGFjdGlvbnM6IHtcbiAgICAgICAgW3g6IHN0cmluZ106IEZ1bmN0aW9uO1xuICAgIH07XG4gICAgcHJpdmF0ZSBhY3RpdmVJdGVtO1xuICAgIHByaXZhdGUgaXNGb2N1c2VkO1xuICAgIHByaXZhdGUgX21vZGVsO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgYWN0aXZlSW5kZXg7XG4gICAgcHJpdmF0ZSByZWFkb25seSBmb2N1c2FibGVJdGVtO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgaXNBY3RpdmVFeHBhbmRlZDtcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2UpO1xuICAgIGFjdGl2YXRlKGl0ZW06IE5hdmlnYXRpb25JdGVtKTogdm9pZDtcbiAgICBhY3RpdmF0ZVBhcmVudChpbmRleDogc3RyaW5nKTogdm9pZDtcbiAgICBhY3RpdmF0ZUluZGV4KGluZGV4OiBzdHJpbmcpOiB2b2lkO1xuICAgIGFjdGl2YXRlQ2xvc2VzdChpbmRleDogc3RyaW5nKTogdm9pZDtcbiAgICBhY3RpdmF0ZUZvY3VzYWJsZSgpOiB2b2lkO1xuICAgIGRlYWN0aXZhdGUoKTogdm9pZDtcbiAgICBjaGVja0luZGV4KGluZGV4OiBzdHJpbmcpOiB2b2lkO1xuICAgIHNlbGVjdEluZGV4KGluZGV4OiBzdHJpbmcpOiB2b2lkO1xuICAgIGlzQWN0aXZlKGluZGV4OiBzdHJpbmcpOiBib29sZWFuO1xuICAgIGlzRm9jdXNhYmxlKGluZGV4OiBzdHJpbmcpOiBib29sZWFuO1xuICAgIGlzRGlzYWJsZWQoaW5kZXg6IHN0cmluZyk6IGJvb2xlYW47XG4gICAgcmVnaXN0ZXJJdGVtKGlkOiBudW1iZXIsIGluZGV4OiBzdHJpbmcsIGRpc2FibGVkOiBib29sZWFuKTogdm9pZDtcbiAgICB1bnJlZ2lzdGVySXRlbShpZDogbnVtYmVyLCBpbmRleDogc3RyaW5nKTogdm9pZDtcbiAgICBtb3ZlKGU6IGFueSk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBleHBhbmQ7XG4gICAgcHJpdmF0ZSBtb3ZlVG9QYXJlbnQ7XG4gICAgcHJpdmF0ZSBtb3ZlVG9DaGlsZDtcbiAgICBwcml2YXRlIG5vdGlmeUV4cGFuZDtcbiAgICBwcml2YXRlIG5vdGlmeU1vdmU7XG4gICAgcHJpdmF0ZSBuYXZpZ2F0aW9uU3RhdGU7XG59XG4iXX0=