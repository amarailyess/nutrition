/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, OnChanges, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { NavigationService } from './navigation/navigation.service';
import { SelectionService } from './selection/selection.service';
import { ExpandStateService } from './expand-state.service';
import { IndexBuilderService } from './index-builder.service';
import { TreeViewLookupService } from './treeview-lookup.service';
import { TreeItem } from './treeitem.interface';
import { CheckedState } from './checkbox/checked-state';
/**
 * @hidden
 *
 * A directive which manages the expanded state of the TreeView.
 */
import * as ɵngcc0 from '@angular/core';
export declare class TreeViewItemDirective implements OnInit, OnChanges, OnDestroy {
    private element;
    private expandService;
    private navigationService;
    private selectionService;
    private lookupService;
    private renderer;
    private ib;
    dataItem: any;
    index: string;
    parentDataItem: any;
    parentIndex: string;
    isChecked: CheckedState;
    isDisabled: boolean;
    isExpanded: boolean;
    isSelected: boolean;
    readonly treeItem: TreeItem;
    readonly parentTreeItem: TreeItem;
    ariaChecked: string;
    readonly id: number;
    private _isExpanded;
    private _isSelected;
    private isInitialized;
    private subscriptions;
    constructor(element: ElementRef, expandService: ExpandStateService, navigationService: NavigationService, selectionService: SelectionService, lookupService: TreeViewLookupService, renderer: Renderer2, ib: IndexBuilderService);
    ngOnInit(): void;
    ngOnChanges(changes: any): void;
    ngOnDestroy(): void;
    subscribe(): void;
    private registerNavigationItem;
    private activateItem;
    private expand;
    private isFocusable;
    private focusItem;
    private moveLookupItem;
    private moveNavigationItem;
    private disableNavigationItem;
    private setAriaAttributes;
    private setDisabledClass;
    private setClass;
    private updateTabIndex;
    private setAttribute;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TreeViewItemDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<TreeViewItemDirective, "[kendoTreeViewItem]", never, {
    "isDisabled": "isDisabled";
    "isChecked": "isChecked";
    "isExpanded": "isExpanded";
    "isSelected": "isSelected";
    "dataItem": "dataItem";
    "index": "index";
    "parentDataItem": "parentDataItem";
    "parentIndex": "parentIndex";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZXZpZXctaXRlbS5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsidHJlZXZpZXctaXRlbS5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBFbGVtZW50UmVmLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5hdmlnYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi9uYXZpZ2F0aW9uL25hdmlnYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBTZWxlY3Rpb25TZXJ2aWNlIH0gZnJvbSAnLi9zZWxlY3Rpb24vc2VsZWN0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgRXhwYW5kU3RhdGVTZXJ2aWNlIH0gZnJvbSAnLi9leHBhbmQtc3RhdGUuc2VydmljZSc7XG5pbXBvcnQgeyBJbmRleEJ1aWxkZXJTZXJ2aWNlIH0gZnJvbSAnLi9pbmRleC1idWlsZGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgVHJlZVZpZXdMb29rdXBTZXJ2aWNlIH0gZnJvbSAnLi90cmVldmlldy1sb29rdXAuc2VydmljZSc7XG5pbXBvcnQgeyBUcmVlSXRlbSB9IGZyb20gJy4vdHJlZWl0ZW0uaW50ZXJmYWNlJztcbmltcG9ydCB7IENoZWNrZWRTdGF0ZSB9IGZyb20gJy4vY2hlY2tib3gvY2hlY2tlZC1zdGF0ZSc7XG4vKipcbiAqIEBoaWRkZW5cbiAqXG4gKiBBIGRpcmVjdGl2ZSB3aGljaCBtYW5hZ2VzIHRoZSBleHBhbmRlZCBzdGF0ZSBvZiB0aGUgVHJlZVZpZXcuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFRyZWVWaWV3SXRlbURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgZWxlbWVudDtcbiAgICBwcml2YXRlIGV4cGFuZFNlcnZpY2U7XG4gICAgcHJpdmF0ZSBuYXZpZ2F0aW9uU2VydmljZTtcbiAgICBwcml2YXRlIHNlbGVjdGlvblNlcnZpY2U7XG4gICAgcHJpdmF0ZSBsb29rdXBTZXJ2aWNlO1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgcHJpdmF0ZSBpYjtcbiAgICBkYXRhSXRlbTogYW55O1xuICAgIGluZGV4OiBzdHJpbmc7XG4gICAgcGFyZW50RGF0YUl0ZW06IGFueTtcbiAgICBwYXJlbnRJbmRleDogc3RyaW5nO1xuICAgIGlzQ2hlY2tlZDogQ2hlY2tlZFN0YXRlO1xuICAgIGlzRGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgaXNFeHBhbmRlZDogYm9vbGVhbjtcbiAgICBpc1NlbGVjdGVkOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IHRyZWVJdGVtOiBUcmVlSXRlbTtcbiAgICByZWFkb25seSBwYXJlbnRUcmVlSXRlbTogVHJlZUl0ZW07XG4gICAgYXJpYUNoZWNrZWQ6IHN0cmluZztcbiAgICByZWFkb25seSBpZDogbnVtYmVyO1xuICAgIHByaXZhdGUgX2lzRXhwYW5kZWQ7XG4gICAgcHJpdmF0ZSBfaXNTZWxlY3RlZDtcbiAgICBwcml2YXRlIGlzSW5pdGlhbGl6ZWQ7XG4gICAgcHJpdmF0ZSBzdWJzY3JpcHRpb25zO1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQ6IEVsZW1lbnRSZWYsIGV4cGFuZFNlcnZpY2U6IEV4cGFuZFN0YXRlU2VydmljZSwgbmF2aWdhdGlvblNlcnZpY2U6IE5hdmlnYXRpb25TZXJ2aWNlLCBzZWxlY3Rpb25TZXJ2aWNlOiBTZWxlY3Rpb25TZXJ2aWNlLCBsb29rdXBTZXJ2aWNlOiBUcmVlVmlld0xvb2t1cFNlcnZpY2UsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGliOiBJbmRleEJ1aWxkZXJTZXJ2aWNlKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IGFueSk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBzdWJzY3JpYmUoKTogdm9pZDtcbiAgICBwcml2YXRlIHJlZ2lzdGVyTmF2aWdhdGlvbkl0ZW07XG4gICAgcHJpdmF0ZSBhY3RpdmF0ZUl0ZW07XG4gICAgcHJpdmF0ZSBleHBhbmQ7XG4gICAgcHJpdmF0ZSBpc0ZvY3VzYWJsZTtcbiAgICBwcml2YXRlIGZvY3VzSXRlbTtcbiAgICBwcml2YXRlIG1vdmVMb29rdXBJdGVtO1xuICAgIHByaXZhdGUgbW92ZU5hdmlnYXRpb25JdGVtO1xuICAgIHByaXZhdGUgZGlzYWJsZU5hdmlnYXRpb25JdGVtO1xuICAgIHByaXZhdGUgc2V0QXJpYUF0dHJpYnV0ZXM7XG4gICAgcHJpdmF0ZSBzZXREaXNhYmxlZENsYXNzO1xuICAgIHByaXZhdGUgc2V0Q2xhc3M7XG4gICAgcHJpdmF0ZSB1cGRhdGVUYWJJbmRleDtcbiAgICBwcml2YXRlIHNldEF0dHJpYnV0ZTtcbn1cbiJdfQ==