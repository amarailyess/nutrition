/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, OnChanges, OnInit, OnDestroy, Renderer2 } from '@angular/core';
import { NavigationService } from './navigation/navigation.service';
import { SelectionService } from './selection/selection.service';
/**
 * @hidden
 *
 * A directive which manages the expanded state of the TreeView.
 */
import * as ɵngcc0 from '@angular/core';
export declare class TreeViewItemContentDirective implements OnChanges, OnInit, OnDestroy {
    private element;
    private navigationService;
    private selectionService;
    private renderer;
    dataItem: any;
    index: string;
    initialSelection: boolean;
    isSelected: (item: object, index: string) => boolean;
    private subscriptions;
    constructor(element: ElementRef, navigationService: NavigationService, selectionService: SelectionService, renderer: Renderer2);
    ngOnChanges(changes: any): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    private updateItem;
    private updateSelection;
    private render;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TreeViewItemContentDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<TreeViewItemContentDirective, "[kendoTreeViewItemContent]", never, {
    "initialSelection": "initialSelection";
    "dataItem": "dataItem";
    "index": "index";
    "isSelected": "isSelected";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZXZpZXctaXRlbS1jb250ZW50LmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJ0cmVldmlldy1pdGVtLWNvbnRlbnQuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBFbGVtZW50UmVmLCBPbkNoYW5nZXMsIE9uSW5pdCwgT25EZXN0cm95LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5hdmlnYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi9uYXZpZ2F0aW9uL25hdmlnYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBTZWxlY3Rpb25TZXJ2aWNlIH0gZnJvbSAnLi9zZWxlY3Rpb24vc2VsZWN0aW9uLnNlcnZpY2UnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKlxuICogQSBkaXJlY3RpdmUgd2hpY2ggbWFuYWdlcyB0aGUgZXhwYW5kZWQgc3RhdGUgb2YgdGhlIFRyZWVWaWV3LlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUcmVlVmlld0l0ZW1Db250ZW50RGlyZWN0aXZlIGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkluaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBlbGVtZW50O1xuICAgIHByaXZhdGUgbmF2aWdhdGlvblNlcnZpY2U7XG4gICAgcHJpdmF0ZSBzZWxlY3Rpb25TZXJ2aWNlO1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgZGF0YUl0ZW06IGFueTtcbiAgICBpbmRleDogc3RyaW5nO1xuICAgIGluaXRpYWxTZWxlY3Rpb246IGJvb2xlYW47XG4gICAgaXNTZWxlY3RlZDogKGl0ZW06IG9iamVjdCwgaW5kZXg6IHN0cmluZykgPT4gYm9vbGVhbjtcbiAgICBwcml2YXRlIHN1YnNjcmlwdGlvbnM7XG4gICAgY29uc3RydWN0b3IoZWxlbWVudDogRWxlbWVudFJlZiwgbmF2aWdhdGlvblNlcnZpY2U6IE5hdmlnYXRpb25TZXJ2aWNlLCBzZWxlY3Rpb25TZXJ2aWNlOiBTZWxlY3Rpb25TZXJ2aWNlLCByZW5kZXJlcjogUmVuZGVyZXIyKTtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBhbnkpOiB2b2lkO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBwcml2YXRlIHVwZGF0ZUl0ZW07XG4gICAgcHJpdmF0ZSB1cGRhdGVTZWxlY3Rpb247XG4gICAgcHJpdmF0ZSByZW5kZXI7XG59XG4iXX0=