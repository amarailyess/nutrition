/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, OnDestroy, AfterViewChecked, ElementRef, NgZone } from '@angular/core';
import { ResizeBatchService } from './resize-batch.service';
/**
 * Resize Sensor Component
 *
 * Triggers a "resize" event whenever the parent DOM element size changes.
 */
import * as ɵngcc0 from '@angular/core';
export declare class ResizeSensorComponent implements OnDestroy, AfterViewChecked {
    /**
     * The maximum number of resize events to emit per second.
     *
     * Defaults to 10.
     */
    rateLimit: number;
    /**
     * Fires when the parent DOM element has been resized.
     */
    resize: EventEmitter<any>;
    private subscription;
    private resizeService;
    constructor(resizeBatchService: ResizeBatchService, element: ElementRef, ngZone: NgZone);
    ngAfterViewChecked(): void;
    ngOnDestroy(): void;
    acceptSize(size?: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ResizeSensorComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ResizeSensorComponent, "kendo-resize-sensor", never, {
    "rateLimit": "rateLimit";
}, {
    "resize": "resize";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaXplLXNlbnNvci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicmVzaXplLXNlbnNvci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IEV2ZW50RW1pdHRlciwgT25EZXN0cm95LCBBZnRlclZpZXdDaGVja2VkLCBFbGVtZW50UmVmLCBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJlc2l6ZUJhdGNoU2VydmljZSB9IGZyb20gJy4vcmVzaXplLWJhdGNoLnNlcnZpY2UnO1xuLyoqXG4gKiBSZXNpemUgU2Vuc29yIENvbXBvbmVudFxuICpcbiAqIFRyaWdnZXJzIGEgXCJyZXNpemVcIiBldmVudCB3aGVuZXZlciB0aGUgcGFyZW50IERPTSBlbGVtZW50IHNpemUgY2hhbmdlcy5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUmVzaXplU2Vuc29yQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95LCBBZnRlclZpZXdDaGVja2VkIHtcbiAgICAvKipcbiAgICAgKiBUaGUgbWF4aW11bSBudW1iZXIgb2YgcmVzaXplIGV2ZW50cyB0byBlbWl0IHBlciBzZWNvbmQuXG4gICAgICpcbiAgICAgKiBEZWZhdWx0cyB0byAxMC5cbiAgICAgKi9cbiAgICByYXRlTGltaXQ6IG51bWJlcjtcbiAgICAvKipcbiAgICAgKiBGaXJlcyB3aGVuIHRoZSBwYXJlbnQgRE9NIGVsZW1lbnQgaGFzIGJlZW4gcmVzaXplZC5cbiAgICAgKi9cbiAgICByZXNpemU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHByaXZhdGUgc3Vic2NyaXB0aW9uO1xuICAgIHByaXZhdGUgcmVzaXplU2VydmljZTtcbiAgICBjb25zdHJ1Y3RvcihyZXNpemVCYXRjaFNlcnZpY2U6IFJlc2l6ZUJhdGNoU2VydmljZSwgZWxlbWVudDogRWxlbWVudFJlZiwgbmdab25lOiBOZ1pvbmUpO1xuICAgIG5nQWZ0ZXJWaWV3Q2hlY2tlZCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgYWNjZXB0U2l6ZShzaXplPzogYW55KTogdm9pZDtcbn1cbiJdfQ==